{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QuotReq",
  "type": "object",
  "properties": {
    "ReqID": {
      "type": "string",
      "fixmlTypeName": "QuoteReqID_t",
      "description": "Unique identifier for a QuoteRequest(35=R)."
    },
    "RFQReqID": {
      "type": "string",
      "fixmlTypeName": "RFQReqID_t",
      "description": "RFQ Request ID - used to identify an RFQ Request."
    },
    "ClOrdID": {
      "type": "string",
      "fixmlTypeName": "ClOrdID_t",
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field."
    },
    "BkngTyp": {
      "type": "string",
      "fixmlTypeName": "BookingType_t"
    },
    "Cpcty": {
      "type": "string",
      "fixmlTypeName": "OrderCapacity_t"
    },
    "Rstctions": {
      "type": "string",
      "fixmlTypeName": "OrderRestrictions_t"
    },
    "PrvtQt": {
      "type": "string",
      "fixmlTypeName": "PrivateQuote_t"
    },
    "RspdntTyp": {
      "type": "string",
      "fixmlTypeName": "RespondentType_t"
    },
    "PrTrdAnon": {
      "type": "string",
      "fixmlTypeName": "PreTradeAnonymity_t",
      "description": "Allows trader to explicitly request anonymity or disclosure in pre-trade market data feeds. Anonymity is relevant in markets where counterparties are regularly disclosed in order depth feeds. Disclosure is relevant when counterparties are not normally visible."
    },
    "ComplianceID": {
      "type": "string",
      "fixmlTypeName": "ComplianceID_t",
      "description": "ID used to represent this transaction for compliance purposes (e.g. OATS reporting)."
    },
    "ComplianceTxt": {
      "type": "string",
      "fixmlTypeName": "ComplianceText_t",
      "description": "Free text for compliance information required for regulatory reporting."
    },
    "EncComplianceTxtLen": {
      "type": "string",
      "fixmlTypeName": "EncodedComplianceTextLen_t",
      "description": "Byte length of encoded (non-ASCII characters) EncodedComplianceText(2352) field."
    },
    "EncComplianceTxt": {
      "type": "string",
      "format": "base64",
      "fixmlTypeName": "EncodedComplianceText_t",
      "description": "Encoded (non-ASCII characters) representation of the ComplianceText(2404) field in the encoded format specified via the MessageEncoding (347) field. If used, the ASCII (English) representation should also be specified in the ComplianceText(2404) field."
    },
    "Txt": {
      "type": "string",
      "fixmlTypeName": "Text_t",
      "description": "Free format text string \n                    (Note: this field does not have a specified maximum length)"
    },
    "EncTxtLen": {
      "type": "string",
      "fixmlTypeName": "EncodedTextLen_t",
      "description": "Byte length of encoded (non-ASCII characters) EncodedText (355) field."
    },
    "EncTxt": {
      "type": "string",
      "format": "base64",
      "fixmlTypeName": "EncodedText_t",
      "description": "Encoded (non-ASCII characters) representation of the Text (58) field in the encoded format specified via the MessageEncoding (347) field. If used, the ASCII (English) representation should also be specified in the Text(58) field."
    },
    "Pty": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "fixmlRepeating": true
    },
    "QuotReq": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "PrevClsPx": {
            "type": "string",
            "fixmlTypeName": "PrevClosePx_t",
            "description": "Previous closing price of security."
          },
          "ReqTyp": {
            "type": "string",
            "fixmlTypeName": "QuoteRequestType_t"
          },
          "QID": {
            "type": "string",
            "fixmlTypeName": "QuoteID_t",
            "description": "Unique identifier for quote"
          },
          "QID2": {
            "type": "string",
            "fixmlTypeName": "SecondaryQuoteID_t",
            "description": "Assigned by the party which accepts the quote. Can be used to provide the quote identifier assigned by an exchange, marketplace or executing system."
          },
          "Typ": {
            "type": "string",
            "fixmlTypeName": "QuoteType_t"
          },
          "SesID": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "TradingSessionID_enum_t",
                "enum": [
                  "Day",
                  "HalfDay",
                  "Morning",
                  "Afternoon",
                  "Evening",
                  "After-hours",
                  "Holiday"
                ],
                "enumKey": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7"
                ],
                "description": "Identifier for a trading session. \n                    A trading session spans an extended period of time that can also be expressed informally in terms of the trading day. Usage is determined by market or counterparties. \n                    To specify good for session where session spans more than one calendar day, use TimeInForce = 0 (Day) in conjunction with TradingSessionID(336). \n                    Bilaterally agreed values of data type \"String\" that start with a character can be used for backward compatibility."
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved100Plus",
                "minimum": 100,
                "description": "Values \"100\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "SesSub": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "TradingSessionSubID_enum_t",
                "enum": [
                  "Pre-Trading",
                  "Opening or opening auction",
                  "(Continuous) Trading",
                  "Closing or closing auction",
                  "Post-Trading",
                  "Scheduled intraday auction",
                  "Quiescent",
                  "Any auction",
                  "Unscheduled intraday auction",
                  "Out of main session trading",
                  "Private auction",
                  "Public auction",
                  "Group auction",
                  "Order initiated auction"
                ],
                "enumKey": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10",
                  "11",
                  "12",
                  "13",
                  "14"
                ],
                "description": "Optional market assigned sub identifier for a trading phase within a trading session. Usage is determined by market or counterparties. Used by US based futures markets to identify exchange specific execution time bracket codes as required by US market regulations. Bilaterally agreed values of data type \"String\" that start with a character can be used for backward compatibility"
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved100Plus",
                "minimum": 100,
                "description": "Values \"100\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "OrignDt": {
            "type": "string",
            "fixmlTypeName": "TradeOriginationDate_t",
            "description": "Used with Fixed Income for Muncipal New Issue Market. Agreement in principal between counter-parties prior to actual trade date. \n                    (Note tag # was reserved in FIX 4.1, added in FIX 4.3) \n                    (prior to FIX 4.4 field was of type UTCDate)"
          },
          "NumCmptors": {
            "type": "integer",
            "fixmlTypeName": "NumOfCompetitors_t",
            "description": "The number of competing Respondents (e.g. dealers) to receive a quote request (either via the QuoteRequest(35=R) or via other means)."
          },
          "Side": {
            "type": "string",
            "fixmlTypeName": "Side_t"
          },
          "QtyTyp": {
            "type": "string",
            "fixmlTypeName": "QtyType_t"
          },
          "MinQty": {
            "type": "string",
            "fixmlTypeName": "MinQty_t",
            "description": "Minimum quantity of an order to be executed. \n                    (Prior to FIX 4.2 this field was of type int)"
          },
          "SettlTyp": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "SettlType_enum_t",
                "enum": [
                  "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
                  "Cash (TOD / T+0)",
                  "Next Day (TOM / T+1)",
                  "T+2",
                  "T+3",
                  "T+4",
                  "Future",
                  "When And If Issued",
                  "Sellers Option",
                  "T+5",
                  "Broken date",
                  "FX Spot Next settlement (Spot+1, aka next day)"
                ],
                "enumKey": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "B",
                  "C"
                ],
                "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular) \n                    Regular is defined as the default settlement period for the particular security on the exchange of execution. \n                    In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and \"when-issued\" securities. Supplying a value of \"7\" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue. \n                    Additionally the following patterns may be uses as well as enum values \n                    Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is any integer > 0 \n                    Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\" is any integer > 0 \n                    Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\" is any integer > 0 \n                    Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\" is any integer > 0 \n                    Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days."
              },
              {
                "type": "string",
                "fixmlTypeName": "Tenor",
                "pattern": "[DMWY](\\d)+",
                "description": "used to allow the expression of FX standard tenors in addition to the base valid enumerations defined for the field that uses this pattern data type. This pattern data type is defined as follows: \n                        Dx = tenor expression for \"days\", e.g. \"D5\", where \"x\" is any integer > 0 \n                        Mx = tenor expression for \"months\", e.g. \"M3\", where \"x\" is any integer > 0 \n                        Wx = tenor expression for \"weeks\", e.g. \"W13\", where \"x\" is any integer > 0 \n                        Yx = tenor expression for \"years\", e.g. \"Y1\", where \"x\" is any integer > 0"
              }
            ]
          },
          "SettlDt": {
            "type": "string",
            "fixmlTypeName": "SettlDate_t",
            "description": "Specific date of trade settlement (SettlementDate) in YYYYMMDD format. \n                    If present, this field overrides SettlType (63). This field is required if the value of SettlType (63) is 6 (Future) or 8 (Sellers Option). This field must be omitted if the value of SettlType (63) is 7 (When and If Issued) \n                    (expressed in local time at place of settlement)"
          },
          "SettlDt2": {
            "type": "string",
            "fixmlTypeName": "SettlDate2_t",
            "description": "SettDate (64) of the future part of a F/X swap order."
          },
          "Qty2": {
            "type": "string",
            "fixmlTypeName": "OrderQty2_t",
            "description": "OrderQty (38) of the future part of a F/X swap order."
          },
          "Ccy": {
            "type": "string",
            "fixmlTypeName": "Currency_t",
            "description": "Identifies currency used for price or quantity fields, depending on the asset class being traded. CurrencyCodeSource(2897) may be used to disambiguate the code source scheme used, and ISO 4217 is the default scheme if absent. \n                    Absence of this field is interpreted as the default currency for the security as defined by the respective reference data. It is recommended that systems provide the currency value whenever possible."
          },
          "CcySrc": {
            "type": "string",
            "fixmlTypeName": "CurrencyCodeSource_t"
          },
          "SettlCcy": {
            "type": "string",
            "fixmlTypeName": "SettlCurrency_t",
            "description": "Currency code of settlement denomination."
          },
          "SettlCcySrc": {
            "type": "string",
            "fixmlTypeName": "SettlCurrencyCodeSource_t"
          },
          "Acct": {
            "type": "string",
            "fixmlTypeName": "Account_t",
            "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager."
          },
          "AcctIDSrc": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "AcctIDSource_enum_t",
                "enum": [
                  "BIC",
                  "SID Code",
                  "TFM (GSPTA)",
                  "OMGEO (Alert ID)",
                  "DTCC Code",
                  "Special Segregated Account ID",
                  "Other (custom or proprietary)"
                ],
                "enumKey": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "99"
                ],
                "description": "Used to identify the source of the Account (1) code. This is especially useful if the account is a new account that the Respondent may not have setup yet in their system."
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved100Plus",
                "minimum": 100,
                "description": "Values \"100\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "AcctTyp": {
            "type": "string",
            "fixmlTypeName": "AccountType_t"
          },
          "TrdTyp": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "TrdType_enum_t",
                "enum": [
                  "Regular trade",
                  "Block trade",
                  "Exchange for physical (EFP)",
                  "Transfer",
                  "Late trade",
                  "T trade",
                  "Weighted average price trade",
                  "Bunched trade",
                  "Late bunched trade",
                  "Prior reference price trade",
                  "After hours trade",
                  "Exchange for risk (EFR)",
                  "Exchange for swap (EFS)",
                  "Exchange of futures for in market futures (EFM)",
                  "Exchange of options for options (EOO)",
                  "Trading at settlement",
                  "All or none",
                  "Futures large order execution",
                  "Exchange of futures for external market futures (EFF)",
                  "Option interim trade",
                  "Option cabinet trade",
                  "Privately negotiated trade",
                  "Substitution of futures for forwards",
                  "Error trade",
                  "Special cum dividend (CD)",
                  "Special ex dividend (XD)",
                  "Special cum coupon (CC)",
                  "Special ex coupon (XC)",
                  "Cash settlement (CS)",
                  "Special price (SP)",
                  "Guaranteed delivery (GD)",
                  "Special cum rights (CR)",
                  "Special ex rights (XR)",
                  "Special cum capital repayments (CP)",
                  "Special ex capital repayments (XP)",
                  "Special cum bonus (CB)",
                  "Special ex bonus (XB)",
                  "Block trade: 2",
                  "Worked principal trade",
                  "Block trades",
                  "Name change",
                  "Portfolio transfer",
                  "Prorogation buy",
                  "Prorogation sell",
                  "Option exercise",
                  "Delta neutral transaction",
                  "Financing transaction",
                  "Non-standard settlement",
                  "Derivative related transaction",
                  "Portfolio trade",
                  "Volume weighted average trade",
                  "Exchange granted trade",
                  "Repurchase agreement",
                  "OTC",
                  "Exchange basis facility (EBF)",
                  "Opening trade",
                  "Netted trade",
                  "Block swap trade",
                  "Credit event trade",
                  "Succession event trade",
                  "Give-up Give-in trade",
                  "Dark trade",
                  "Technical trade",
                  "Benchmark",
                  "Package trade",
                  "Roll trade",
                  "Closing price trade",
                  "Inter-fund transfer trade",
                  "Net asset value calculated trade"
                ],
                "enumKey": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10",
                  "11",
                  "12",
                  "13",
                  "14",
                  "15",
                  "16",
                  "17",
                  "18",
                  "19",
                  "20",
                  "22",
                  "23",
                  "24",
                  "25",
                  "26",
                  "27",
                  "28",
                  "29",
                  "30",
                  "31",
                  "32",
                  "33",
                  "34",
                  "35",
                  "36",
                  "37",
                  "38",
                  "39",
                  "40",
                  "41",
                  "42",
                  "43",
                  "44",
                  "45",
                  "46",
                  "47",
                  "48",
                  "49",
                  "50",
                  "51",
                  "52",
                  "53",
                  "54",
                  "55",
                  "56",
                  "57",
                  "58",
                  "59",
                  "60",
                  "61",
                  "62",
                  "63",
                  "64",
                  "65",
                  "66",
                  "67",
                  "68",
                  "69"
                ],
                "description": "Type of trade assigned to a trade. SecondaryTrdType(855) and TertiaryTrdType(2896) may be used in addition to TrdType(828) to assign up to three different trade types to a single trade."
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved1000Plus",
                "minimum": 1000,
                "description": "Values \"1000\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "RegTxnTyp": {
            "type": "string",
            "fixmlTypeName": "RegulatoryTransactionType_t"
          },
          "NegottnMeth": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "NegotiationMethod_enum_t",
                "enum": [
                  "Auto spot",
                  "Negotiated spot",
                  "The spot price for the reference or benchmark security is to be negotiated via phone or voice."
                ],
                "enumKey": [
                  "0",
                  "1",
                  "2"
                ],
                "description": "Specifies the negotiation method to be used."
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved100Plus",
                "minimum": 100,
                "description": "Values \"100\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "QuotPxTyp": {
            "type": "string",
            "fixmlTypeName": "QuotePriceType_t"
          },
          "OrdTyp": {
            "type": "string",
            "fixmlTypeName": "OrdType_t"
          },
          "ValidUntilTm": {
            "type": "string",
            "fixmlTypeName": "ValidUntilTime_t",
            "description": "Indicates expiration time of indication message (always expressed in UTC (Universal Time Coordinated, also known as \"GMT\")"
          },
          "ExpireTm": {
            "type": "string",
            "fixmlTypeName": "ExpireTime_t",
            "description": "Time/Date of order expiration (always expressed in UTC (Universal Time Coordinated, also known as \"GMT\") \n                    The meaning of expiration is specific to the context where the field is used. \n                    For orders, this is the expiration time of a Good Til Date TimeInForce. \n                    For Quotes - this is the expiration of the quote. \n                    Expiration time is provided across the quote message dialog to control the length of time of the overall quoting process. \n                    For collateral requests, this is the time by which collateral must be assigned. \n                    For collateral assignments, this is the time by which a response to the assignment is expected. \n                    For credit/risk limit checks, this is the time when the reserved credit limit will expire for the requested transaction."
          },
          "RspTm": {
            "type": "string",
            "fixmlTypeName": "ResponseTime_t",
            "description": "The time by which a meaningful response should arrive back (always expressed in UTC (Universal Time Coordinated, also known as \"GMT\")."
          },
          "QuotDsplyTm": {
            "type": "string",
            "fixmlTypeName": "QuoteDisplayTime_t",
            "description": "Time by which the quote will be displayed."
          },
          "ExpsreDur": {
            "type": "integer",
            "fixmlTypeName": "ExposureDuration_t",
            "description": "This is the time in seconds of a \"Good for Time\" (GFT) TimeInForce. \n                    Positive integer value which represents the time is seconds in which the new order remains active in the market before it is automatically cancelled (e.g. expired). \n                    Bi-lateral agreements will dictate the maximum value of this field. It is assumed that most systems will impose a max limit of 86,400 seconds (i.e. 24 hours). \n                    For Quotes: The period of time a quoted price is tradable(i.e. on-the-wire) before it becomes indicative (i.e. off-the-wire)."
          },
          "ExpsreDurUnit": {
            "type": "string",
            "fixmlTypeName": "ExposureDurationUnit_t"
          },
          "TxnTm": {
            "type": "string",
            "fixmlTypeName": "TransactTime_t",
            "description": "Timestamp when the business transaction represented by the message occurred."
          },
          "PxTyp": {
            "type": "string",
            "fixmlTypeName": "PriceType_t"
          },
          "Px": {
            "type": "string",
            "fixmlTypeName": "Price_t",
            "description": "Price per unit of quantity (e.g. per share)"
          },
          "MidPx": {
            "type": "string",
            "fixmlTypeName": "MidPx_t",
            "description": "Mid price/rate. \n                    For OTC swaps this is the mid-market mark (for example, as defined by CFTC). \n                    For uncleared OTC swaps, LegMidPx(2346) and the MidPx(631) fields are mutually exclusive."
          },
          "Px2": {
            "type": "string",
            "fixmlTypeName": "Price2_t",
            "description": "Price of the future part of a F/X swap order. \n                    See Price (44) for description."
          },
          "TrdContntn": {
            "anyOf": [
              {
                "type": "string",
                "fixmlTypeName": "TradeContinuation_enum_t",
                "enum": [
                  "Novation",
                  "Partial novation",
                  "Trade unwind",
                  "Partial trade unwind",
                  "Exercise",
                  "Compression/Netting",
                  "Full netting",
                  "Partial netting",
                  "Amendment",
                  "Increase",
                  "Credit event",
                  "Strategic restructuring",
                  "Succession event reorganization",
                  "Succession event renaming",
                  "Porting",
                  "Withdrawal",
                  "Void",
                  "Account transfer",
                  "Give up",
                  "TakeUp",
                  "Average pricing",
                  "Reversal",
                  "Allocation/Trade posting",
                  "Cascade",
                  "Delivery",
                  "Option assignment",
                  "Expiration",
                  "Maturity",
                  "Equal position adjustment",
                  "Unequal position adjustment",
                  "Correction",
                  "Early termination",
                  "Rerate",
                  "Other price-forming continuation data"
                ],
                "enumKey": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10",
                  "11",
                  "12",
                  "13",
                  "14",
                  "15",
                  "16",
                  "17",
                  "18",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "25",
                  "26",
                  "27",
                  "28",
                  "29",
                  "30",
                  "31",
                  "32",
                  "99"
                ],
                "description": "Specifies the post-execution trade continuation or lifecycle event. Additional values may be used by mutual agreement of the counterparties."
              },
              {
                "type": "integer",
                "fixmlTypeName": "Reserved100Plus",
                "minimum": 100,
                "description": "Values \"100\" and above are reserved for bilaterally agreed upon user defined enumerations."
              }
            ]
          },
          "TrdContntnTxt": {
            "type": "string",
            "fixmlTypeName": "TradeContinuationText_t",
            "description": "Free form text to specify additional trade continuation information or data."
          },
          "EncTrdContntnTextLen": {
            "type": "string",
            "fixmlTypeName": "EncodedTradeContinuationTextLen_t",
            "description": "Byte length of encoded (non-ASCII characters) EncodedTradeContinuationText(2371) field."
          },
          "EncTrdContntnText": {
            "type": "string",
            "format": "base64",
            "fixmlTypeName": "EncodedTradeContinuationText_t",
            "description": "Encoded (non-ASCII characters) representation of the TradeContinuationText(2374) field in the encoded format specified via the MessageEncoding(347) field. If used, the ASCII (English) representation should also be specified in the TradeContinuationText(2374) field."
          },
          "StrkTm": {
            "type": "string",
            "fixmlTypeName": "StrikeTime_t",
            "description": "The time at which current market prices are used to determine the value of a basket. \n                    In negotiation workflows where a spread-to-benchmark price is negotiated, this is the pre-determined time at which the benchmark is to be spotted."
          },
          "Instrmt": {
            "type": "string"
          },
          "FinDetls": {
            "type": "string"
          },
          "Undly": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          },
          "OrdQty": {
            "type": "string"
          },
          "RtSrc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          },
          "Stip": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          },
          "Leg": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "OrdQty": {
                  "type": "string",
                  "fixmlTypeName": "LegOrderQty_t",
                  "description": "Quantity ordered of this leg. \n                    See OrderQty (38) for description and valid values"
                },
                "Qty": {
                  "type": "string",
                  "fixmlTypeName": "LegQty_t",
                  "description": "This field is deprecated and has been replaced by LegOrderQty(685). This field will likely be removed from the FIX standard in a future version."
                },
                "MidPx": {
                  "type": "string",
                  "fixmlTypeName": "LegMidPx_t",
                  "description": "Leg Mid price/rate. \n                    For OTC swaps, this is the mid-market mark (for example, as defined by CFTC). \n                    For uncleared OTC swaps, LegMidPx(2346) and the MidPx(631) fields are mutually exclusive."
                },
                "SwapTyp": {
                  "type": "string",
                  "fixmlTypeName": "LegSwapType_t"
                },
                "SettlTyp": {
                  "anyOf": [
                    {
                      "type": "string",
                      "fixmlTypeName": "SettlType_enum_t",
                      "enum": [
                        "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
                        "Cash (TOD / T+0)",
                        "Next Day (TOM / T+1)",
                        "T+2",
                        "T+3",
                        "T+4",
                        "Future",
                        "When And If Issued",
                        "Sellers Option",
                        "T+5",
                        "Broken date",
                        "FX Spot Next settlement (Spot+1, aka next day)"
                      ],
                      "enumKey": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "B",
                        "C"
                      ],
                      "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular) \n                    Regular is defined as the default settlement period for the particular security on the exchange of execution. \n                    In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and \"when-issued\" securities. Supplying a value of \"7\" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue. \n                    Additionally the following patterns may be uses as well as enum values \n                    Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is any integer > 0 \n                    Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\" is any integer > 0 \n                    Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\" is any integer > 0 \n                    Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\" is any integer > 0 \n                    Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days."
                    },
                    {
                      "type": "string",
                      "fixmlTypeName": "Tenor",
                      "pattern": "[DMWY](\\d)+",
                      "description": "used to allow the expression of FX standard tenors in addition to the base valid enumerations defined for the field that uses this pattern data type. This pattern data type is defined as follows: \n                        Dx = tenor expression for \"days\", e.g. \"D5\", where \"x\" is any integer > 0 \n                        Mx = tenor expression for \"months\", e.g. \"M3\", where \"x\" is any integer > 0 \n                        Wx = tenor expression for \"weeks\", e.g. \"W13\", where \"x\" is any integer > 0 \n                        Yx = tenor expression for \"years\", e.g. \"Y1\", where \"x\" is any integer > 0"
                    }
                  ]
                },
                "SettlDt": {
                  "type": "string",
                  "fixmlTypeName": "LegSettlDate_t",
                  "description": "Refer to description for SettlDate[64]"
                },
                "RefID": {
                  "type": "string",
                  "fixmlTypeName": "LegRefID_t",
                  "description": "Unique identifier for a specific leg (uniqueness not defined as part of the FIX specification). LegRefID(654) be used to reference the value from LegID(1788)."
                },
                "Leg": {
                  "type": "string"
                },
                "Stip": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "fixmlRepeating": true
                },
                "Pty": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "fixmlRepeating": true
                },
                "BnchmkCurve": {
                  "type": "string"
                }
              },
              "fixmlComponent": "Leg"
            },
            "fixmlRepeating": true
          },
          "QuotQual": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Qual": {
                  "type": "string",
                  "fixmlTypeName": "QuoteQualifier_t"
                }
              },
              "fixmlComponent": "QuotQual"
            },
            "fixmlRepeating": true
          },
          "RegTrdID": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          },
          "PxQual": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          },
          "SprdBnchmkCurve": {
            "type": "string"
          },
          "Yield": {
            "type": "string"
          },
          "Pty": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "fixmlRepeating": true
          }
        },
        "fixmlComponent": "QuotReq",
        "required": [
          "Instrmt"
        ]
      },
      "fixmlRepeating": true
    }
  },
  "required": [
    "ReqID"
  ]
}
